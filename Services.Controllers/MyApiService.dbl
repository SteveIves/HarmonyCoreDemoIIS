;;*****************************************************************************
;;
;; Title:       MyApiService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "MyApi" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import Services.Models

namespace Services.Controllers

    public partial class MyApiService extends DynamicCallProvider

        static IsInitialized, boolean
        static method MyApiService
        proc
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            DataObjectMetadataBase.LookupType(^typeof(Customer))
            DataObjectMetadataBase.LookupType(^typeof(Item))
            DataObjectMetadataBase.LookupType(^typeof(Order))
            DataObjectMetadataBase.LookupType(^typeof(OrderItem))
            DataObjectMetadataBase.LookupType(^typeof(Vendor))
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method MyApiService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddCustomer, @Task<MyApi.AddCustomer_Response>
            required in args, @MyApi.AddCustomer_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddCustomer_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddCustomer"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddItem, @Task<MyApi.AddItem_Response>
            required in args, @MyApi.AddItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddItem"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddOrder, @Task<MyApi.AddOrder_Response>
            required in args, @MyApi.AddOrder_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddOrder_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddOrder"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddOrderItem, @Task<MyApi.AddOrderItem_Response>
            required in args, @MyApi.AddOrderItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddOrderItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddOrderItem"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddTwoNumbers, @Task<MyApi.AddTwoNumbers_Response>
            required in args, @MyApi.AddTwoNumbers_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddTwoNumbers_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddTwoNumbers"
            &   ,args.number1
            &   ,args.number2
            &   ,response.result
            &   )

            ArgumentHelper.Argument(3, resultTuple, response.result)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method AddVendor, @Task<MyApi.AddVendor_Response>
            required in args, @MyApi.AddVendor_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.AddVendor_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("AddVendor"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method DeleteCustomer, @Task<MyApi.DeleteCustomer_Response>
            required in args, @MyApi.DeleteCustomer_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.DeleteCustomer_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("DeleteCustomer"
            &   ,args.CustomerNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method DeleteItem, @Task<MyApi.DeleteItem_Response>
            required in args, @MyApi.DeleteItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.DeleteItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("DeleteItem"
            &   ,args.ItemNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method DeleteOrder, @Task<MyApi.DeleteOrder_Response>
            required in args, @MyApi.DeleteOrder_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.DeleteOrder_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("DeleteOrder"
            &   ,args.OrderNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method DeleteOrderItem, @Task<MyApi.DeleteOrderItem_Response>
            required in args, @MyApi.DeleteOrderItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.DeleteOrderItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("DeleteOrderItem"
            &   ,args.OrderNumber
            &   ,args.ItemNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method DeleteVendor, @Task<MyApi.DeleteVendor_Response>
            required in args, @MyApi.DeleteVendor_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.DeleteVendor_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("DeleteVendor"
            &   ,args.VendorNumber
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetAllCustomers, @Task<MyApi.GetAllCustomers_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetAllCustomers_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetAllCustomers"
            &   ,ArgumentHelper.MaybeNull(response.Customers)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Customers)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetAllItems, @Task<MyApi.GetAllItems_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetAllItems_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetAllItems"
            &   ,ArgumentHelper.MaybeNull(response.Items)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Items)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetAllOrderItems, @Task<MyApi.GetAllOrderItems_Response>
            required in args, @MyApi.GetAllOrderItems_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetAllOrderItems_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetAllOrderItems"
            &   ,args.OrderNumber
            &   ,ArgumentHelper.MaybeNull(response.OrderItems)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.OrderItems)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetAllOrders, @Task<MyApi.GetAllOrders_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetAllOrders_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetAllOrders"
            &   ,ArgumentHelper.MaybeNull(response.Orders)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Orders)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetAllVendors, @Task<MyApi.GetAllVendors_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetAllVendors_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetAllVendors"
            &   ,ArgumentHelper.MaybeNull(response.Vendors)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Vendors)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetCustomer, @Task<MyApi.GetCustomer_Response>
            required in args, @MyApi.GetCustomer_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetCustomer_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetCustomer"
            &   ,args.CustomerNumber
            &   ,ArgumentHelper.MaybeNull(response.Customer)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Customer)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetEnvironment, @Task<MyApi.GetEnvironment_Response>
        proc
            ;;Prepare the response object
            data response = new MyApi.GetEnvironment_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetEnvironment"
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetItem, @Task<MyApi.GetItem_Response>
            required in args, @MyApi.GetItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetItem"
            &   ,args.ItemNumber
            &   ,ArgumentHelper.MaybeNull(response.Item)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Item)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetLogicalName, @Task<MyApi.GetLogicalName_Response>
            required in args, @MyApi.GetLogicalName_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetLogicalName_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetLogicalName"
            &   ,args.aLogicalName
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetOrder, @Task<MyApi.GetOrder_Response>
            required in args, @MyApi.GetOrder_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetOrder_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetOrder"
            &   ,args.OrderNumber
            &   ,ArgumentHelper.MaybeNull(response.Order)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Order)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetOrderItem, @Task<MyApi.GetOrderItem_Response>
            required in args, @MyApi.GetOrderItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetOrderItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetOrderItem"
            &   ,args.OrderNumber
            &   ,args.ItemNumber
            &   ,ArgumentHelper.MaybeNull(response.OrderItem)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(3, resultTuple, response.OrderItem)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method GetVendor, @Task<MyApi.GetVendor_Response>
            required in args, @MyApi.GetVendor_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.GetVendor_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("GetVendor"
            &   ,args.VendorNumber
            &   ,ArgumentHelper.MaybeNull(response.Vendor)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.Vendor)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method UpdateCustomer, @Task<MyApi.UpdateCustomer_Response>
            required in args, @MyApi.UpdateCustomer_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.UpdateCustomer_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("UpdateCustomer"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method UpdateItem, @Task<MyApi.UpdateItem_Response>
            required in args, @MyApi.UpdateItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.UpdateItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("UpdateItem"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method UpdateOrder, @Task<MyApi.UpdateOrder_Response>
            required in args, @MyApi.UpdateOrder_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.UpdateOrder_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("UpdateOrder"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method UpdateOrderItem, @Task<MyApi.UpdateOrderItem_Response>
            required in args, @MyApi.UpdateOrderItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.UpdateOrderItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("UpdateOrderItem"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method UpdateVendor, @Task<MyApi.UpdateVendor_Response>
            required in args, @MyApi.UpdateVendor_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.UpdateVendor_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("UpdateVendor"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ValidateCustomer, @Task<MyApi.ValidateCustomer_Response>
            required in args, @MyApi.ValidateCustomer_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ValidateCustomer_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ValidateCustomer"
            &   ,args.Customer
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Customer)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ValidateItem, @Task<MyApi.ValidateItem_Response>
            required in args, @MyApi.ValidateItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ValidateItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ValidateItem"
            &   ,args.Item
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Item)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ValidateOrder, @Task<MyApi.ValidateOrder_Response>
            required in args, @MyApi.ValidateOrder_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ValidateOrder_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ValidateOrder"
            &   ,args.Order
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Order)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ValidateOrderItem, @Task<MyApi.ValidateOrderItem_Response>
            required in args, @MyApi.ValidateOrderItem_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ValidateOrderItem_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ValidateOrderItem"
            &   ,args.OrderItem
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.OrderItem)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ValidateVendor, @Task<MyApi.ValidateVendor_Response>
            required in args, @MyApi.ValidateVendor_Request
        proc
            ;;Prepare the response object
            data response = new MyApi.ValidateVendor_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ValidateVendor"
            &   ,args.Vendor
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.Vendor)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
