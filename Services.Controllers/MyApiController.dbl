;;*****************************************************************************
;;
;; Title:       MyApiController.dbl
;;
;; Description: This class defines a WebAPI controller that exposes
;;              various endpoints used to execute routines via the
;;              Harmony Core Traditional Bridge mechanism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.Mvc
import Microsoft.Extensions.Configuration
import Microsoft.Extensions.Options
import Newtonsoft.Json
import System
import System.Collections.Generic
import System.Linq
import System.Net.Mime
import System.Text
import System.Threading.Tasks
import MyApi

import Services.Controllers

namespace Services.Controllers

    {Produces("application/json")}
    {Route("MyApi")}
    ;;; <summary>
    ;;; MyApi
    ;;; </summary>
    ;;; <remarks>
    ;;; Custom coded endpoints for interface MyApi
    ;;; </remarks>
    public partial class MyApiController extends ControllerBase

        ;;Services provided via dependency injection
        private _MyApiService, @MyApiService
        private _AppSettings, @IOptions<Services.Models.AppSettings>

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        ;;; <param name="aMyApiService">MyApiService instance provided via dependency injection</param>
        ;;; <param name="aAppSettings">Application settings</param>
        public method MyApiController
            aMyApiService, @MyApiService
            aAppSettings, @IOptions<Services.Models.AppSettings>
        proc
            _MyApiService = aMyApiService
            _AppSettings = aAppSettings
        endmethod

        {HttpPost}
        {Route("AddTwoNumbers")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method AddTwoNumbers, @Task<ActionResult<AddTwoNumbers_Response>>
            {FromBody}
            required in aRequest, @AddTwoNumbers_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.AddTwoNumbers(aRequest))
        endmethod

        {HttpPost}
        {Route("CustomerAdd")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerAdd, @Task<ActionResult<CustomerAdd_Response>>
            {FromBody}
            required in aRequest, @CustomerAdd_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.CustomerAdd(aRequest))
        endmethod

        {HttpPost}
        {Route("CustomerDelete")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerDelete, @Task<ActionResult<CustomerDelete_Response>>
            {FromBody}
            required in aRequest, @CustomerDelete_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.CustomerDelete(aRequest))
        endmethod

        {HttpPost}
        {Route("CustomerGet")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerGet, @Task<ActionResult<CustomerGet_Response>>
            {FromBody}
            required in aRequest, @CustomerGet_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.CustomerGet(aRequest))
        endmethod

        {HttpGet}
        {Route("CustomerGetAll")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerGetAll, @Task<ActionResult<CustomerGetAll_Response>>
        proc
            mreturn ok(await _MyApiService.CustomerGetAll())
        endmethod

        {HttpPost}
        {Route("CustomerUpdate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerUpdate, @Task<ActionResult<CustomerUpdate_Response>>
            {FromBody}
            required in aRequest, @CustomerUpdate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.CustomerUpdate(aRequest))
        endmethod

        {HttpPost}
        {Route("CustomerValidate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method CustomerValidate, @Task<ActionResult<CustomerValidate_Response>>
            {FromBody}
            required in aRequest, @CustomerValidate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.CustomerValidate(aRequest))
        endmethod

        {HttpGet}
        {Route("GetEnvironment")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method GetEnvironment, @Task<ActionResult<GetEnvironment_Response>>
        proc
            mreturn ok(await _MyApiService.GetEnvironment())
        endmethod

        {HttpPost}
        {Route("GetLogicalName")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method GetLogicalName, @Task<ActionResult<GetLogicalName_Response>>
            {FromBody}
            required in aRequest, @GetLogicalName_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.GetLogicalName(aRequest))
        endmethod

        {HttpPost}
        {Route("ItemAdd")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemAdd, @Task<ActionResult<ItemAdd_Response>>
            {FromBody}
            required in aRequest, @ItemAdd_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.ItemAdd(aRequest))
        endmethod

        {HttpPost}
        {Route("ItemDelete")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemDelete, @Task<ActionResult<ItemDelete_Response>>
            {FromBody}
            required in aRequest, @ItemDelete_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.ItemDelete(aRequest))
        endmethod

        {HttpPost}
        {Route("ItemGet")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemGet, @Task<ActionResult<ItemGet_Response>>
            {FromBody}
            required in aRequest, @ItemGet_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.ItemGet(aRequest))
        endmethod

        {HttpGet}
        {Route("ItemGetAll")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemGetAll, @Task<ActionResult<ItemGetAll_Response>>
        proc
            mreturn ok(await _MyApiService.ItemGetAll())
        endmethod

        {HttpPost}
        {Route("ItemUpdate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemUpdate, @Task<ActionResult<ItemUpdate_Response>>
            {FromBody}
            required in aRequest, @ItemUpdate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.ItemUpdate(aRequest))
        endmethod

        {HttpPost}
        {Route("ItemValidate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method ItemValidate, @Task<ActionResult<ItemValidate_Response>>
            {FromBody}
            required in aRequest, @ItemValidate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.ItemValidate(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderAdd")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderAdd, @Task<ActionResult<OrderAdd_Response>>
            {FromBody}
            required in aRequest, @OrderAdd_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderAdd(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderDelete")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderDelete, @Task<ActionResult<OrderDelete_Response>>
            {FromBody}
            required in aRequest, @OrderDelete_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderDelete(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderGet")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderGet, @Task<ActionResult<OrderGet_Response>>
            {FromBody}
            required in aRequest, @OrderGet_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderGet(aRequest))
        endmethod

        {HttpGet}
        {Route("OrderGetAll")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderGetAll, @Task<ActionResult<OrderGetAll_Response>>
        proc
            mreturn ok(await _MyApiService.OrderGetAll())
        endmethod

        {HttpPost}
        {Route("OrderItemAdd")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemAdd, @Task<ActionResult<OrderItemAdd_Response>>
            {FromBody}
            required in aRequest, @OrderItemAdd_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemAdd(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderItemDelete")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemDelete, @Task<ActionResult<OrderItemDelete_Response>>
            {FromBody}
            required in aRequest, @OrderItemDelete_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemDelete(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderItemGet")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemGet, @Task<ActionResult<OrderItemGet_Response>>
            {FromBody}
            required in aRequest, @OrderItemGet_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemGet(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderItemGetAll")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemGetAll, @Task<ActionResult<OrderItemGetAll_Response>>
            {FromBody}
            required in aRequest, @OrderItemGetAll_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemGetAll(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderItemUpdate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemUpdate, @Task<ActionResult<OrderItemUpdate_Response>>
            {FromBody}
            required in aRequest, @OrderItemUpdate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemUpdate(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderItemValidate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderItemValidate, @Task<ActionResult<OrderItemValidate_Response>>
            {FromBody}
            required in aRequest, @OrderItemValidate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderItemValidate(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderUpdate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderUpdate, @Task<ActionResult<OrderUpdate_Response>>
            {FromBody}
            required in aRequest, @OrderUpdate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderUpdate(aRequest))
        endmethod

        {HttpPost}
        {Route("OrderValidate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method OrderValidate, @Task<ActionResult<OrderValidate_Response>>
            {FromBody}
            required in aRequest, @OrderValidate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.OrderValidate(aRequest))
        endmethod

        {HttpPost}
        {Route("VendorAdd")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorAdd, @Task<ActionResult<VendorAdd_Response>>
            {FromBody}
            required in aRequest, @VendorAdd_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.VendorAdd(aRequest))
        endmethod

        {HttpPost}
        {Route("VendorDelete")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorDelete, @Task<ActionResult<VendorDelete_Response>>
            {FromBody}
            required in aRequest, @VendorDelete_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.VendorDelete(aRequest))
        endmethod

        {HttpPost}
        {Route("VendorGet")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorGet, @Task<ActionResult<VendorGet_Response>>
            {FromBody}
            required in aRequest, @VendorGet_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.VendorGet(aRequest))
        endmethod

        {HttpGet}
        {Route("VendorGetAll")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorGetAll, @Task<ActionResult<VendorGetAll_Response>>
        proc
            mreturn ok(await _MyApiService.VendorGetAll())
        endmethod

        {HttpPost}
        {Route("VendorUpdate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorUpdate, @Task<ActionResult<VendorUpdate_Response>>
            {FromBody}
            required in aRequest, @VendorUpdate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.VendorUpdate(aRequest))
        endmethod

        {HttpPost}
        {Route("VendorValidate")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200"><HTTP_200_MESSAGE></response>
        ;;; <response code="400"><HTTP_400_MESSAGE></response>
        ;;; <response code="500"><HTTP_500_MESSAGE></response>
        ;;; <returns></returns>
        public async method VendorValidate, @Task<ActionResult<VendorValidate_Response>>
            {FromBody}
            required in aRequest, @VendorValidate_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _MyApiService.VendorValidate(aRequest))
        endmethod

    endclass

endnamespace
