;;*****************************************************************************
;;
;; Title:       MyApiMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.MyApi


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddCustomer
    ;;; </summary>
    public class AddCustomer_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method AddCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddItem
    ;;; </summary>
    public class AddItem_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method AddItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddOrder
    ;;; </summary>
    public class AddOrder_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method AddOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddOrderItem
    ;;; </summary>
    public class AddOrderItem_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method AddOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddTwoNumbers
    ;;; </summary>
    public class AddTwoNumbers_Dispatcher extends RoutineStub


        public method AddTwoNumbers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN number1 d28.10)
                arg1,               d28.10
                ;;Argument 2 (REQUIRED IN number2 d28.10)
                arg2,               d28.10
                ;;Argument 3 (REQUIRED OUT result d28.10)
                arg3,               d28.10
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN number1 d28.10)

            arg1 = dispatcher.GetImplied(arguments[1])

            ;;Argument 2 (REQUIRED IN number2 d28.10)

            arg2 = dispatcher.GetImplied(arguments[2])

            ;;Argument 3 (REQUIRED OUT result d28.10)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AddTwoNumbers(arg1,arg2,arg3)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT result d28.10)
            
            serializer.ArgumentData(3,arg3,FieldDataType.ImpliedDecimalField,28,10,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.AddVendor
    ;;; </summary>
    public class AddVendor_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method AddVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %AddVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteCustomer
    ;;; </summary>
    public class DeleteCustomer_Dispatcher extends RoutineStub


        public method DeleteCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteItem
    ;;; </summary>
    public class DeleteItem_Dispatcher extends RoutineStub


        public method DeleteItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteOrder
    ;;; </summary>
    public class DeleteOrder_Dispatcher extends RoutineStub


        public method DeleteOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteOrderItem
    ;;; </summary>
    public class DeleteOrderItem_Dispatcher extends RoutineStub


        public method DeleteOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber d2)
                arg2,               d2
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber d2)

            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteOrderItem(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.DeleteVendor
    ;;; </summary>
    public class DeleteVendor_Dispatcher extends RoutineStub


        public method DeleteVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber d6)
                arg1,               d6
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %DeleteVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllCustomers
    ;;; </summary>
    public class GetAllCustomers_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method GetAllCustomers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllCustomers(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @StrCustomer returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllItems
    ;;; </summary>
    public class GetAllItems_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method GetAllItems_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllItems(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @StrItem returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllOrderItems
    ;;; </summary>
    public class GetAllOrderItems_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method GetAllOrderItems_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)
                arg2Array,          JSON_ELEMENT
                arg2,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)

            arg2 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllOrderItems(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT OrderItems ArrayList collection of structure @StrOrderItem returned as DataTable)
            
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectCollectionField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllOrders
    ;;; </summary>
    public class GetAllOrders_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method GetAllOrders_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllOrders(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @StrOrder returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetAllVendors
    ;;; </summary>
    public class GetAllVendors_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method GetAllVendors_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetAllVendors(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @StrVendor returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,135,"VENDORS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetCustomer
    ;;; </summary>
    public class GetCustomer_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method GetCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustomerNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)
                arg2DataObject,     @DataObjectBase
                arg2,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustomerNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetCustomer(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Customer structure @StrCustomer)
            
            ;;Argument 2: Single StrCustomer record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetEnvironment
    ;;; </summary>
    public class GetEnvironment_Dispatcher extends RoutineStub


        public method GetEnvironment_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                returnValue,         A80
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetEnvironment()

            ;;Function return value
            serializer.ArgumentData(0,%atrim(returnValue),FieldDataType.AlphaField,80,0,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetItem
    ;;; </summary>
    public class GetItem_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method GetItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ItemNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Item structure @StrItem)
                arg2DataObject,     @DataObjectBase
                arg2,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ItemNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Item structure @StrItem)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetItem(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Item structure @StrItem)
            
            ;;Argument 2: Single StrItem record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetLogicalName
    ;;; </summary>
    public class GetLogicalName_Dispatcher extends RoutineStub


        public method GetLogicalName_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN aLogicalName a40)
                arg1,               a40
                returnValue,         A1024
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN aLogicalName a40)

            arg1 = dispatcher.GetText(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetLogicalName(arg1)

            ;;Function return value
            serializer.ArgumentData(0,%atrim(returnValue),FieldDataType.AlphaField,1024,0,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetOrder
    ;;; </summary>
    public class GetOrder_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method GetOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)
                arg2DataObject,     @DataObjectBase
                arg2,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetOrder(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Order structure @StrOrder)
            
            ;;Argument 2: Single StrOrder record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetOrderItem
    ;;; </summary>
    public class GetOrderItem_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method GetOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED IN ItemNumber d2)
                arg2,               d2
                ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)
                arg3DataObject,     @DataObjectBase
                arg3,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED IN ItemNumber d2)

            arg2 = dispatcher.GetDecimal(arguments[2])

            ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetOrderItem(arg1,arg2,arg3)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT OrderItem structure @StrOrderItem)
            
            ;;Argument 3: Single StrOrderItem record
            serializer.ArgumentData(3,arg3,FieldDataType.DataObjectField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.GetVendor
    ;;; </summary>
    public class GetVendor_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method GetVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN VendorNumber d6)
                arg1,               d6
                ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)
                arg2DataObject,     @DataObjectBase
                arg2,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN VendorNumber d6)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %GetVendor(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Vendor structure @StrVendor)
            
            ;;Argument 2: Single StrVendor record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,135,"VENDORS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateCustomer
    ;;; </summary>
    public class UpdateCustomer_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method UpdateCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateItem
    ;;; </summary>
    public class UpdateItem_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method UpdateItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateOrder
    ;;; </summary>
    public class UpdateOrder_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method UpdateOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateOrderItem
    ;;; </summary>
    public class UpdateOrderItem_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method UpdateOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.UpdateVendor
    ;;; </summary>
    public class UpdateVendor_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method UpdateVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %UpdateVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateCustomer
    ;;; </summary>
    public class ValidateCustomer_Dispatcher extends RoutineStub

        private mStrCustomerMetadata, @DataObjectMetadataBase

        public method ValidateCustomer_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)
                arg1DataObject,     @DataObjectBase
                arg1,               StrCustomer
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrCustomerMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateCustomer(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Customer structure @StrCustomer)
            
            ;;Argument 1: Single StrCustomer record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,161,"CUSTOMERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateItem
    ;;; </summary>
    public class ValidateItem_Dispatcher extends RoutineStub

        private mStrItemMetadata, @DataObjectMetadataBase

        public method ValidateItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Item structure @StrItem)
            
            ;;Argument 1: Single StrItem record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,151,"ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateOrder
    ;;; </summary>
    public class ValidateOrder_Dispatcher extends RoutineStub

        private mStrOrderMetadata, @DataObjectMetadataBase

        public method ValidateOrder_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrder
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateOrder(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Order structure @StrOrder)
            
            ;;Argument 1: Single StrOrder record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,100,"ORDERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateOrderItem
    ;;; </summary>
    public class ValidateOrderItem_Dispatcher extends RoutineStub

        private mStrOrderItemMetadata, @DataObjectMetadataBase

        public method ValidateOrderItem_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrOrderItemMetadata = DataObjectMetadataBase.LookupType("OrderItem")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)
                arg1DataObject,     @DataObjectBase
                arg1,               StrOrderItem
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrOrderItemMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateOrderItem(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT OrderItem structure @StrOrderItem)
            
            ;;Argument 1: Single StrOrderItem record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,100,"ORDER_ITEMS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method MyApi.ValidateVendor
    ;;; </summary>
    public class ValidateVendor_Dispatcher extends RoutineStub

        private mStrVendorMetadata, @DataObjectMetadataBase

        public method ValidateVendor_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)
                arg1DataObject,     @DataObjectBase
                arg1,               StrVendor
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrVendorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %ValidateVendor(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT Vendor structure @StrVendor)
            
            ;;Argument 1: Single StrVendor record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,135,"VENDORS",true)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class MyApiDummyModel
    endclass
endnamespace

